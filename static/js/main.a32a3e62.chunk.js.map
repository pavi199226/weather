{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["arr","date","Date","App","useState","name","pressure","description","windSpeed","temp","humidity","id","icon","img","9","12","15","18","21","state","setState","className","type","value","placeholder","onChange","event","target","prevState","url","concat","Axios","get","then","res","data","weather","main","Math","floor","wind","speed","url1","item","list","i","console","log","push","catch","err","String","substr","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a32a3e62.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nvar arr = [];\nvar date = new Date();\nfunction App() {\n  const [state, setState] = useState({\n    name: \"\",\n    pressure: \"1001 \",\n    description: \"Heavy intensity rain\",\n    windSpeed: \"11.17 \",\n    temp: \"13\",\n    humidity: \"77%\",\n    id: \"\",\n    icon: \"10d\",\n    img: { 9: \"09d\", 12: \"10d\", 15: \"09d\", 18: \"10d\", 21: \"09d\" },\n  });\n\n  const handleChange = (event) => {\n    let name = event.target.value;\n\n    setState((prevState) => {\n      return { ...prevState, name: name };\n    });\n    var url = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(\n      state.name,\n      \"&APPID=f47ab680ca6824accbd4cfd34b357718\"\n    );\n    Axios.get(url)\n      .then((res) => {\n        setState((prevState) => {\n          return {\n            ...prevState,\n            name: name,\n            description: res.data.weather[0].description,\n            pressure: res.data.main.pressure,\n            humidity: res.data.main.humidity,\n            temp: Math.floor(res.data.main.temp - 273),\n            windSpeed: res.data.wind.speed,\n            id: res.data.id,\n            icon: res.data.weather[0].icon,\n          };\n        });\n        const url1 = \"http://api.openweathermap.org/data/2.5/forecast?id=\".concat(\n          state.id,\n          \"&APPID=f47ab680ca6824accbd4cfd34b357718\"\n        );\n        Axios.get(url1)\n          .then((res) => {\n            var item = res.data.list;\n            for (let i = 0; i < 5; i++) {\n              console.log(item[i].weather[0].icon);\n              arr.push(item[i].weather[0].icon);\n              setState((prevState) => {\n                return {\n                  ...prevState,\n                  img: {\n                    ...prevState.img,\n                    9: arr[0],\n                    12: arr[1],\n                    15: arr[2],\n                    18: arr[3],\n                    21: arr[4],\n                  },\n                };\n              });\n            }\n            console.log(arr);\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        <div className=\"search\">\n          <h1 className=\"city\"></h1>\n          <input\n            type=\"text\"\n            value={state.name}\n            placeholder=\"Enter city\"\n            onChange={handleChange}\n          />\n\n          <div className=\"search-results\">\n            <ul>\n              <li>Paris</li>\n              <li>Manila</li>\n              <li>Beaverlodge</li>\n            </ul>\n          </div>\n        </div>\n\n        <p className=\"description\">{state.description}</p>\n        <p className=\"date\">{String(date).substr(0, 14)}</p>\n        <div className=\"numbers\">\n          <div className=\"temp\">\n            <span>{state.temp}</span>\n            <sup className=\"unit\">Â°C</sup>\n          </div>\n\n          <div className=\"icon\">\n            {}\n            <img\n              id=\"img0\"\n              src={\"http://openweathermap.org/img/wn/\".concat(\n                state.icon,\n                \"@2x.png\"\n              )}\n              alt=\"\"\n            />\n          </div>\n\n          <div>\n            <table className=\"measurements\">\n              <tr>\n                <td className=\"label\">Pressure</td>\n                <td className=\"value\">{state.pressure}hPa</td>\n              </tr>\n              <tr>\n                <td className=\"label\">Humidity</td>\n                <td className=\"value\">{state.humidity}</td>\n              </tr>\n              <tr>\n                <td className=\"label\">Wind speed</td>\n                <td className=\"value\">{state.windSpeed}meters / sec</td>\n              </tr>\n            </table>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"hourly\">\n          <div>\n            <img\n              id=\"img1\"\n              src={`http://openweathermap.org/img/wn/${state.img[9]}@2x.png`}\n              alt=\"\"\n            />\n            <span className=\"hours\">9 AM</span>\n          </div>\n\n          <div>\n            <img\n              id=\"img2\"\n              src={`http://openweathermap.org/img/wn/${state.img[12]}@2x.png`}\n              alt=\"\"\n            />\n            <span className=\"hours\">12 AM</span>\n          </div>\n\n          <div>\n            <img\n              id=\"img3\"\n              src={`http://openweathermap.org/img/wn/${state.img[15]}@2x.png`}\n              alt=\"\"\n            />\n            <span className=\"hours\">15 PM</span>\n          </div>\n\n          <div>\n            <img\n              id=\"img4\"\n              src={`http://openweathermap.org/img/wn/${state.img[18]}@2x.png`}\n              alt=\"\"\n            />\n            <span className=\"hours\">18 PM</span>\n          </div>\n\n          <div>\n            <img\n              id=\"img5\"\n              src={`http://openweathermap.org/img/wn/${state.img[21]}@2x.png`}\n              alt=\"\"\n            />\n            <span className=\"hours\">21 PM</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}